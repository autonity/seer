// Code generated by MockGen. DO NOT EDIT.
// Source: ./interfaces/connectionProvider.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	ethclient "github.com/autonity/autonity/ethclient"
	rpc "github.com/autonity/autonity/rpc"
	gomock "github.com/golang/mock/gomock"
)

// MockConnectionProvider is a mock of ConnectionProvider interface.
type MockConnectionProvider struct {
	ctrl     *gomock.Controller
	recorder *MockConnectionProviderMockRecorder
}

// MockConnectionProviderMockRecorder is the mock recorder for MockConnectionProvider.
type MockConnectionProviderMockRecorder struct {
	mock *MockConnectionProvider
}

// NewMockConnectionProvider creates a new mock instance.
func NewMockConnectionProvider(ctrl *gomock.Controller) *MockConnectionProvider {
	mock := &MockConnectionProvider{ctrl: ctrl}
	mock.recorder = &MockConnectionProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockConnectionProvider) EXPECT() *MockConnectionProviderMockRecorder {
	return m.recorder
}

// GetRPCConnection mocks base method.
func (m *MockConnectionProvider) GetRPCConnection() *rpc.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetRPCConnection")
	ret0, _ := ret[0].(*rpc.Client)
	return ret0
}

// GetRPCConnection indicates an expected call of GetRPCConnection.
func (mr *MockConnectionProviderMockRecorder) GetRPCConnection() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRPCConnection", reflect.TypeOf((*MockConnectionProvider)(nil).GetRPCConnection))
}

// GetWebSocketConnection mocks base method.
func (m *MockConnectionProvider) GetWebSocketConnection() *ethclient.Client {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWebSocketConnection")
	ret0, _ := ret[0].(*ethclient.Client)
	return ret0
}

// GetWebSocketConnection indicates an expected call of GetWebSocketConnection.
func (mr *MockConnectionProviderMockRecorder) GetWebSocketConnection() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWebSocketConnection", reflect.TypeOf((*MockConnectionProvider)(nil).GetWebSocketConnection))
}
